name: Ubuntu

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  CTEST_OUTPUT_ON_FAILURE: 1
  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  CPM_SOURCE_CACHE: ${{ github.workspace }}/cpm_modules
  LLVM_VER: 13

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: "**/cpm_modules"
          key: ${{ github.workflow }}-cpm-modules-${{ hashFiles('**/CMakeLists.txt', '**/*.cmake') }}

      - uses: seanmiddleditch/gha-setup-ninja@master
        with:
          version: 1.10.2

      - name: Install llvm ${{ env.LLVM_VER }}
        run: |
          sudo .github/workflows/llvm.sh ${LLVM_VER}
          pip3 install cmakelang pyyaml

      - name: configure
        env:
          CC: clang-${{ env.LLVM_VER }}
          CXX: clang++-${{ env.LLVM_VER }}
        run: cmake -G Ninja -S test -B build -DENABLE_TEST_COVERAGE=1 -DCMAKE_BUILD_TYPE=Debug

      - name: build
        run: cmake --build build -v

      - name: test
        run: ctest --test-dir build --output-on-failure

      - name: collect code coverage
        run: bash <(curl -s https://codecov.io/bash) || echo "Codecov did not collect coverage reports"

  format:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: "**/cpm_modules"
          key: ${{ github.workflow }}-cpm-modules-${{ hashFiles('**/CMakeLists.txt', '**/*.cmake') }}

      - uses: seanmiddleditch/gha-setup-ninja@master
        with:
          version: 1.10.2

      - name: Install llvm ${{ env.LLVM_VER }}
        run: |
          sudo .github/workflows/llvm.sh ${LLVM_VER}
          pip3 install cmakelang pyyaml

      - name: configure-format
        run: |
          clang-format-${LLVM_VER} --version
          cmake -G Ninja -S test -B build-format -DCLANG_FORMAT_PROGRAM=$(which clang-format-${LLVM_VER})

      - name: display format diff
        run: |
          cmake --build build-format --target format -v

      - name: check style
        run: |
          cmake --build build-format --target check-format -v

  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: "**/cpm_modules"
          key: ${{ github.workflow }}-cpm-modules-${{ hashFiles('**/CMakeLists.txt', '**/*.cmake') }}

      - uses: seanmiddleditch/gha-setup-ninja@master
        with:
          version: 1.10.2

      - name: Install llvm ${{ env.LLVM_VER }}
        run: |
          sudo .github/workflows/llvm.sh ${LLVM_VER}
          pip3 install cmakelang pyyaml

      - name: configure linting
        run: |
          clang-tidy-${LLVM_VER} --version
          cmake -G Ninja -S test -B build-tidy -DUSE_STATIC_ANALYZER=clang-tidy \
            -DCLANG_TIDY_EXE=$(which clang-tidy-${LLVM_VER}) -DCLANG_TIDY_ARGS="--enable-check-profile"

      - name: lint
        run: |
          cmake --build build-tidy -v
